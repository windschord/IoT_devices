; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html

[env:pico]
platform = raspberrypi
board = rpipico2
framework = arduino
; LittleFS ファイルシステム設定 - 最小限の128KBに設定（25KB実際使用）  
board_build.filesystem_size = 128k
; 安定化のため元の設定に戻す
upload_protocol = picotool
lib_deps = 
	ethernet
	; https://github.com/WIZnet-ArduinoEthernet/Ethernet.git
	https://github.com/sparkfun/SparkFun_u-blox_GNSS_Arduino_Library.git
	; Replaced manual SH1106 library with proven working arduino-lib-oled
	https://github.com/durydevelop/arduino-lib-oled
	https://github.com/baggio63446333/QZQSM.git
	https://github.com/SWITCHSCIENCE/QZSSDCX.git
	adafruit/RTClib@^2.1.1
	bblanchon/ArduinoJson@^6.21.3
	; LittleFS support for file system operations
	littlefs

; DEBUGビルドを有効にする
; build_type = debug
; マクロシンボル名 (DEBUG) を追加
; GPSとPPSログを無効化してButtonデバッグに集中
; build_flags = -DDEBUG_CONSOLE_GPS -DDEBUG_CONSOLE_PPS -DDEBUG_CONSOLE_DCX_ALL
build_flags = -DDEBUG_BUTTON
; build_flags = -DDEBUG_CONSOLE_GPS

; テスト環境設定 (Unity - 既存)
[env:test]
platform = native
lib_deps = 
	throwtheswitch/Unity@^2.5.2
test_framework = unity
test_build_src = no
build_flags = 
	-DUNIT_TEST
	-std=gnu++11
	-DUNITY_INCLUDE_DOUBLE
test_ignore = disabled/*

; GoogleTest環境設定
[env:gtest]
platform = native
framework = 
lib_deps = 
	google/googletest@^1.14.0
build_flags = 
	-std=c++17
	-pthread
	-lgtest
	-lgmock
test_build_src = no
test_ignore = 
	disabled/*
	test_*_simple/*
	test_*_coverage/*
	test_*_arduino/*
	test_*_extended/*

; Native test environment
[env:native]
platform = native
framework = 
build_flags = 
    -std=c++11
    -DUNITY_INCLUDE_DOUBLE
    -DUNITY_INCLUDE_CONFIG_H
lib_deps = 
    throwtheswitch/Unity@^2.5.2

[env:test_native]
platform = native
framework = 
test_build_src = no
build_flags = 
    -std=c++11
    -DUNITY_INCLUDE_DOUBLE
    -DUNITY_INCLUDE_CONFIG_H
lib_deps = 
    throwtheswitch/Unity@^2.5.2
test_ignore = disabled/*

; Code Coverage Environment (macOS Clang compatible)
[env:coverage]
platform = native
framework = 
build_flags = 
    -std=c++11
    -DUNITY_INCLUDE_DOUBLE
    -DUNITY_INCLUDE_CONFIG_H
    -D unitTesting
    -lgcov
    --coverage
    -fprofile-arcs
    -ftest-coverage
    -O0
lib_deps = 
    throwtheswitch/Unity@^2.5.2
test_build_src = yes
test_ignore = disabled/*